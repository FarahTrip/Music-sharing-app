@model Trippin_Website.ViewModels.BeatViewModel
@{
    ViewBag.Title = "AdaugaNou";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<style>
    .field-validation-error {
        width: 100%;
        margin-top: 0.25rem;
        font-size: 0.875em;
        color: #c00
    }

    .input-validation-error {
        border: 2px solid rgb(237, 36, 29, 0.91);
    }

    #uploadButton {
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #222;
        padding: 20px;
        border-radius: 5px;
        width: 280px;
        margin-top: 10px;
        margin-bottom: 10px;
    }

    .file-input input[type="file"] {
        display: none;
    }

    .file-input label {
        display: inline-block;
        padding: 8px 20px;
        background-color: #333;
        color: #fff;
        border-radius: 20px;
        cursor: pointer;
    }

    .form-message {
        color: #666;
        font-style: italic;
    }

    #submitBtn {
        border-radius: 20px;
    }
</style>

<link href="~/Content/Retusuri.css" rel="stylesheet" />

<body>
    <div class="main-container" style="background-color: #0d1117; display: flex; padding: 20px; margin-top:25px; border-radius: 10px; justify-content: center; align-items: center;">



        @using (Html.BeginForm("Creeaza", "Beaturi", FormMethod.Post, new { id = "adaugaForm", enctype = "multipart/form-data" }))
        {

            <h2 style="text-align: center; display:block">Adauga un nou beat</h2>

            @Html.HiddenFor(m => m.Beat.Created, new { @Value = DateTime.Now })
            <div class="form-group">
                @Html.LabelFor(m => m.Beat.Name)
                @Html.TextBoxFor(m => m.Beat.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Beat.Name)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Beat.Key)
                @Html.TextBoxFor(m => m.Beat.Key, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Beat.Key)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Beat.Bpm)
                @Html.TextBoxFor(m => m.Beat.Bpm, new { @class = "form-control", @type = "number" })
                @Html.ValidationMessageFor(m => m.Beat.Bpm)
            </div>
            <div class="form-group">
                <label for="Description">Descriere</label>
                @Html.TextAreaFor(m => m.Beat.Description, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label for="StyleId">Stilul</label>
                @Html.DropDownListFor(m => m.Beat.StyleId, new SelectList(Model.Styles, "Id", "Name"), new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label id="produceriLabel" for="produceri">Produceri</label>
                <input class="form-control" id="produceri" type="text" name="name" value="" />
            </div>
            <div class="form-group">
                <label id="artistiLabel" for="artisti">Artisti</label>
                <input class="form-control" id="artisti" type="text" name="name" value="" />
            </div>
            <div id="uploadButton" class="form-group">
                <div class="file-input">
                    <label for="file">Incarca beat-ul</label>
                    @Html.TextBox("file", "", new { type = "file", id = "file" })
                </div>
            </div>
            <p class="form-message">@ViewBag.Message</p>
            if (User.IsInRole("Admin"))
            {
                <div class=“checkbox” style="margin-top: 15px; margin-bottom:15px ">
                    @Html.CheckBoxFor(m => m.Beat.IsBanger)	Este banger?
                </div>
            }

            @Html.AntiForgeryToken()

            <button type="submit" id="submitBtn" class="btn btn-secondary">
                Submit
            </button>

        }

    </div>

</body>

<footer>
</footer>
@section scripts
{

    <script>
        $('#adaugaForm').submit(function (event) {
        event.preventDefault();
        var audio = new Audio('@Url.Content("~/Content/Audio/error-ok.wav")');
        audio.play();
        setTimeout(function () {
            $('#adaugaForm').unbind('submit').submit();
        }, 500);
    });
    </script>

    <script>

        var vm = {};
        $(document).ready(function () {
            var produceri = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('userName'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/Conturi?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#produceri').typeahead(
                null, {
                name: 'produceri',
                display: 'userName',
                source: produceri
            });
        }).on('typeahead:select', function (e, producer) {
            vm.producerId = producer.UserId;
        });

    </script>
    <script>
    var vm2 = {};
    $(document).ready(function () {
    var artisti = new Bloodhound({
    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('userName'),
    queryTokenizer: Bloodhound.tokenizers.whitespace,
    remote: {
    url: '/api/Conturi?query=%QUERY',
    wildcard: '%QUERY'
    }
    });

    $('#artisti').typeahead(
    null, {
    name: 'artisti',
    display: 'userName',
    source: artisti
    });
    }).on('typeahead:select', function (e, producer) {
    vm.artistId = producer.UserId;
    });
    </script>

    @Scripts.Render("~/bundles/jqueryval")
}

